{
  "Comment": "ScaleASGs",
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${FunctionSfScaleInitialize}",
        "Payload": {
          "Input.$": "$"
        }
      },
      "Next": "ConcurrentScaling",
      "TimeoutSeconds": 120
    },
    "ConcurrentScaling": {
      "Type": "Map",
      "End": true,
      "MaxConcurrency": 100,
      "ItemsPath": "$.Payload.asgs",
      "InputPath": "$",
      "Parameters": {
        "scale.$": "$.Payload.scale",
        "asg.$": "$$.Map.Item.Value"
      },
      "Iterator": {
        "StartAt": "ScaleASG",
        "States": {

          "ScaleASG": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "FunctionName": "${FunctionSfScaleUpdateAsg}",
              "Payload.$": "$"
            },
            "Next": "CheckASG",
            "TimeoutSeconds": 20
          },

          "CheckASG": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "FunctionName": "${FunctionSfScaleCheckAsg}",
              "Payload.$": "$"
            },
            "ResultSelector": {
              "Payload.$": "States.StringToJson($.Payload)"
            },
            "Next": "ASGChoice",
            "TimeoutSeconds": 30
          },

          "ScaleWait": {
            "Type": "Wait",
            "Seconds": 30,
            "Next": "CheckASG"
          },

          "Failure": {
            "Type": "Fail"
          },

          "ASGChoice": {
            "Type": "Choice",
            "InputPath": "$.Payload",
            "Choices": [
              {
                "Variable": "$.ScaleStatus",
                "StringEquals": "SCALE_SUCCEEDED",
                "Next": "Finalize"
              },
              {
                "Variable": "$.ScaleStatus",
                "StringEquals": "SCALE_IN_PROGRESS",
                "Next": "ScaleWait"
              },
              {
                "Variable": "$.ScaleStatus",
                "StringEquals": "SCALE_FAILED",
                "Next": "Failure"
              }
            ]
          },
          "Finalize": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
              "FunctionName": "${FunctionSfScaleFinalize}",
              "Payload.$": "$"
            },
            "End": true,
            "TimeoutSeconds": 30
          }
        }
      }
    }
  }
}

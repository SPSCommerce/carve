{
  "Comment": "Deploy Carve CloudFormation Stacks",
  "StartAt": "CreateStackIterator",
  "States": {
    "CreateStackIterator": {
      "Type": "Map",
      "End": true,
      "MaxConcurrency": 0,
      "InputPath": "$.Input",
      "Iterator": {
        "StartAt": "CreateStack",
        "States": {
          "CreateStack": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "ResultSelector": {
              "Payload.$": "States.StringToJson($.Payload)"
            },
            "Parameters": {
              "FunctionName": "${CarveFunction}",
              "Payload": {
                "DeployStack": "CreateStack",
                "Input.$": "$"
              }
            },
            "Next": "DescribeStackCreation",
            "TimeoutSeconds": 30
          },
          "DescribeStackCreation": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "ResultSelector": {
              "Payload.$": "States.StringToJson($.Payload)"
            },
            "Parameters": {
              "FunctionName": "${CarveFunction}",
              "Payload": {
                "DeployStack": "DescribeStack",
                "Input.$": "$"
              }
            },
            "Next": "CreateStackStatusChoice",
            "TimeoutSeconds": 30
          },
          "DescribeStackWait": {
            "Type": "Wait",
            "Seconds": 30,
            "Next": "DescribeStackCreation"
          },
          "Failure": {
            "Type": "Fail"
          },
          "Succeed": {
            "Type": "Succeed"
          },
          "CreateStackStatusChoice": {
            "Type": "Choice",
            "InputPath": "$.Payload",
            "Choices": [
              {
                "Or": [
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "CREATE_COMPLETE"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "UPDATE_COMPLETE"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "UPDATE_ROLLBACK_COMPLETE"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "ROLLBACK_COMPLETE"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "IMPORT_COMPLETE"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "IMPORT_ROLLBACK_COMPLETE"
                  }
                ],
                "Next": "CreateChangeSet"
              },
              {
                "Or": [
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "CREATE_IN_PROGRESS"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "UPDATE_IN_PROGRESS"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "REVIEW_IN_PROGRESS"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "IMPORT_IN_PROGRESS"
                  }
                ],
                "Next": "DescribeStackWait"
              },
              {
                "Or": [
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "IMPORT_ROLLBACK_IN_PROGRESS"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "UPDATE_ROLLBACK_IN_PROGRESS"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "ROLLBACK_IN_PROGRESS"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "DELETE_IN_PROGRESS"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "CREATE_FAILED"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "IMPORT_ROLLBACK_FAILED"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "UPDATE_ROLLBACK_FAILED"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "DELETE_FAILED"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "ROLLBACK_FAILED"
                  },
                  {
                    "Variable": "$.StackStatus",
                    "StringEquals": "DELETE_COMPLETE"
                  }

                ],
                "Next": "Failure"
              }
            ]
          },
          "CreateChangeSet": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "ResultSelector": {
              "Payload.$": "States.StringToJson($.Payload)"
            },
            "Parameters": {
              "FunctionName": "${CarveFunction}",
              "Payload": {
                "DeployStack": "CreateChangeSet",
                "Input.$": "$"
              }
            },
            "Next": "DescribeChangeSet",
            "TimeoutSeconds": 30
          },
          "DescribeChangeSet": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "ResultSelector": {
              "Payload.$": "States.StringToJson($.Payload)"
            },
            "Parameters": {
              "FunctionName": "${CarveFunction}",
              "Payload": {
                "DeployStack": "DescribeChangeSet",
                "Input.$": "$"
              }
            },
            "Next": "CreateChangeSetChoice",
            "TimeoutSeconds": 30
          },
          "CreateChangeSetChoice": {
            "Type": "Choice",
            "InputPath": "$.Payload",
            "Choices": [
              {
                "Variable": "$.Status",
                "StringEquals": "CREATE_COMPLETE",
                "Next": "ExecuteChangeSet"
              },
              {
                "Variable": "$.Status",
                "StringEquals": "NO_CHANGES",
                "Next": "Succeed"
              },
              {
                "Or": [
                  {
                    "Variable": "$.Status",
                    "StringEquals": "CREATE_PENDING"
                  },
                  {
                    "Variable": "$.Status",
                    "StringEquals": "CREATE_IN_PROGRESS"
                  }
                ],
                "Next": "CreateChangeSetWait"
              },
              {
                "Or": [
                  {
                    "Variable": "$.Status",
                    "StringEquals": "DELETE_PENDING"
                  },
                  {
                    "Variable": "$.Status",
                    "StringEquals": "DELETE_IN_PROGRESS"
                  },
                  {
                    "Variable": "$.Status",
                    "StringEquals": "DELETE_COMPLETE"
                  },
                  {
                    "Variable": "$.Status",
                    "StringEquals": "DELETE_FAILED"
                  },
                  {
                    "Variable": "$.Status",
                    "StringEquals": "FAILED"
                  }
                ],
                "Next": "Failure"
              }
            ]
          },
          "CreateChangeSetWait": {
            "Type": "Wait",
            "Seconds": 30,
            "Next": "DescribeChangeSet"
          },
          "ExecuteChangeSet": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "ResultSelector": {
              "Payload.$": "States.StringToJson($.Payload)"
            },
            "Parameters": {
              "FunctionName": "${CarveFunction}",
              "Payload": {
                "DeployStack": "ExecuteChangeSet",
                "Input.$": "$"
              }
            },
            "Next": "DescribeChangeSetExecution",
            "TimeoutSeconds": 30
          },
          "DescribeChangeSetExecution": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "ResultSelector": {
              "Payload.$": "States.StringToJson($.Payload)"
            },
            "Parameters": {
              "FunctionName": "${CarveFunction}",
              "Payload": {
                "DeployStack": "DescribeChangeSetExecution",
                "Input.$": "$"
              }
            },
            "Next": "ExecuteChangeSetChoice",
            "TimeoutSeconds": 30
          },
          "ExecuteChangeSetWait": {
            "Type": "Wait",
            "Seconds": 30,
            "Next": "DescribeChangeSetExecution"
          },
          "ExecuteChangeSetChoice": {
            "Type": "Choice",
            "InputPath": "$.Payload",
            "Choices": [
              {
                "Or": [
                  {
                    "Variable": "$.ExecutionStatus",
                    "StringEquals": "EXECUTE_COMPLETE"
                  },
                  {
                    "Variable": "$.ExecutionStatus",
                    "StringEquals": "NO_CHANGES"
                  }
                ],
                "Next": "Succeed"
              },
              {
                "Or": [
                  {
                    "Variable": "$.ExecutionStatus",
                    "StringEquals": "AVAILABLE"
                  },
                  {
                    "Variable": "$.ExecutionStatus",
                    "StringEquals": "EXECUTE_IN_PROGRESS"
                  }
                ],
                "Next": "ExecuteChangeSetWait"
              },
              {
                "Or": [
                  {
                    "Variable": "$.ExecutionStatus",
                    "StringEquals": "UNAVAILABLE"
                  },
                  {
                    "Variable": "$.ExecutionStatus",
                    "StringEquals": "EXECUTE_FAILED"
                  },
                  {
                    "Variable": "$.ExecutionStatus",
                    "StringEquals": "OBSOLETE"
                  }
                ],
                "Next": "Failure"
              }
            ]
          }
        }
      }
    }
  }
}
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  DeployBucket:
    Default: carve-deploy
    Description: bucket name
    Type: String
  OrgId:
    Type: String
    Description: AWS Organizations Id
    Default: ''
  RootOU:
    Type: String
    Description: AWS Organizations Root OU Id for stackset deploy
    Default: ''
  Prefix:
    Type: String
    Description: "Prefix carve AWS resources and stacknames with this"
    Default: ''
  GitHubOAUTHTokenASMPath:
    Default: githuboauthtoken
    Description: GitHubServiceOAUTHToken path in Secrets Manager
    Type: String
  CarveCoreAccount:
    Type: String
    Description: Carve core AccountId
    Default: ""

Resources:
  CarvePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: carve-deploy-pipeline
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineServiceRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:PutRetentionPolicy
                  - logs:DeleteLogGroup
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - '*'
                Resource:
                  - '*'

  CarveDeploymentPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: CarveDeploymentPipeline
      RoleArn: !GetAtt 'CarvePipelineRole.Arn'
      RestartExecutionOnUpdate: true
      ArtifactStore:
        Location: !Ref 'DeployBucket'
        Type: S3
      Stages:
        - Name: CarveSource
          Actions:
            - Name: SourceAction
              Namespace: github_vars
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: GithubRepo
              Region: !Ref 'AWS::Region'
              Configuration:
                Owner: SPSCommerce
                Repo: carve
                Branch: dev
                OAuthToken: !Sub '{{resolve:secretsmanager:${GitHubOAUTHTokenASMPath}:SecretString:token}}'

        - Name: UpdatePipeline
          Actions:
            - Name: update-pipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ChangeSetName: pipeline-changeset
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt 'CarvePipelineRole.Arn'
                StackName: !Ref "AWS::StackName"
                TemplatePath: GithubRepo::deployment/stackset-pipeline.cfn.yml
                ParameterOverrides: !Sub |
                  {
                    "GitHubOAUTHTokenASMPath": "${GitHubOAUTHTokenASMPath}", 
                    "OrgId": "${OrgId}", 
                    "RootOU": "${RootOU}", 
                    "Prefix": "${Prefix}", 
                    "DeployBucket": "${DeployBucket}", 
                    "CarveCoreAccount": "${CarveCoreAccount}", 
                    "UniqueId": "${UniqueId}"
                  }
              OutputArtifacts: []
              InputArtifacts:
                - Name: GithubRepo

        - Name: DeployIAM
          Actions:

            - Name: root-stack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ChangeSetName: pipeline-changeset
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt 'CarvePipelineRole.Arn'
                StackName: !Sub "${Prefix}carve-org-role"
                TemplatePath: GithubRepo::deployment/carve-org-stackset.cfn.yml
                ParameterOverrides: !Sub |
                  {
                  "OrgId": "${OrgId}", 
                  "Prefix": "${Prefix}", 
                  "CarveCoreAccount": "${CarveCoreAccount}"
                  }
              OutputArtifacts: []
              InputArtifacts:
                - Name: GithubRepo

            - Name: carve-org-stackset
              Region: !Ref 'AWS::Region'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormationStackSet
                Version: 1
              Configuration:
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                OrganizationsAutoDeployment: Enabled
                Description: CarveRole
                DeploymentTargets: !Ref 'RootOU'
                Regions: !Ref 'AWS::Region'
                FailureTolerancePercentage: 100
                MaxConcurrentPercentage: 100
                PermissionModel: SERVICE_MANAGED
                StackSetName: !Sub "${Prefix}carve-org-role"
                TemplatePath: GithubRepo::deployment/carve-org-stackset.cfn.yml
                Parameters: !Sub |
                  ParameterKey=OrgId,ParameterValue=${OrgId}
                  ParameterKey=Prefix,ParameterValue="${Prefix}"
                  ParameterKey=CarveCoreAccount,ParameterValue="${CarveCoreAccount}"
              OutputArtifacts: []
              InputArtifacts:
                - Name: GithubRepo
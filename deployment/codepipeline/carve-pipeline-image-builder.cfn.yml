AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  GitHubOAUTHTokenASMPath:
    Default: githuboauthtoken
    Description: GitHubServiceOAUTHToken Secret name
    Type: String
  DeployBucket:
    Default: ''
    Description: bucket name
    Type: String
  OrgId:
    Type: String
    Description: AWS Organizations Id
    Default: ''
  Prefix:
    Type: String
    Description: "Prefix carve AWS resources and stacknames with this"
    Default: ''
  UniqueId:
    Type: String
    Description: A unique id may be used instead of OrgId on buckets
    Default: ""
  ExistingSubnetId:
    Type: String
    Default: ""
    Description: Must have Internet Access, will create if not provided
  ExistingVpcId:
    Type: String
    Default: ""
    Description: Must have Internet Access, will create if not provided
  VpcCIDR:
    Description: IP range (CIDR notation) for new VPC if needed
    Type: String
    Default: "10.0.0.0/24"
  PublicSubnetCIDR:
    Description: IP range (CIDR notation) for subnet in new VPC if needed
    Type: String
    Default: "10.0.0.0/28"

Resources:
  CarveImageBuilderPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: CarveImageBuilderPipeline
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/${Prefix}carve-deploy-pipeline"
      RestartExecutionOnUpdate: true
      ArtifactStore:
        Location: !Ref 'DeployBucket'
        Type: S3
      Stages:
        - Name: CarveSource
          Actions:
            - Name: SourceAction
              Namespace: github_vars
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: GithubRepo
              Region: !Ref 'AWS::Region'
              Configuration:
                Owner: SPSCommerce
                Repo: carve
                Branch: main
                OAuthToken: !Sub '{{resolve:secretsmanager:${GitHubOAUTHTokenASMPath}:SecretString:token}}'
        - Name: CarveImageBuilder
          Actions:
            - Name: carve-imagebuilder
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ChangeSetName: pipeline-changeset
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !Sub arn:aws:iam::012957890772:role/${Prefix}carve-deploy-pipeline
                StackName: !Sub '${Prefix}carve-imagebuilder'
                TemplatePath: GithubRepo::deployment/carve-image-builder.cfn.yml
                ParameterOverrides: !Sub '{"ExistingSubnetId":"${ExistingSubnetId}","ExistingVpcId":"${ExistingVpcId}","VpcCIDR":"${VpcCIDR}","PublicSubnetCIDR":"${PublicSubnetCIDR}","OrgId":"${OrgId}","UniqueId":"${UniqueId}","Prefix":"${Prefix}","DeployBucket":"${DeployBucket}"}'
              OutputArtifacts: []
              InputArtifacts:
                - Name: GithubRepo
        - Name: UpdateResources
          Actions:
            - Name: update-carve-managed-resources
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: '1'
              RunOrder: 2
              Configuration:
                FunctionName: !Sub "${Prefix}carve-core"
                UserParameters: UpdateManagedStacks
              OutputArtifacts: []
              InputArtifacts: []
              Region: !Ref 'AWS::Region'

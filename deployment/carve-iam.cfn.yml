AWSTemplateFormatVersion: '2010-09-09'
Description: Resources For Every AWS Account Running Carve

Parameters:

  OrganizationsId:
    Type: String
    Description: AWS Organizations Id
    Default: ""

  CarveCoreAccount:
    Type: String
    Description: AWS Organizations Root AccountId
    Default: ""

  ResourcePrefix:
    Type: String
    Description: "Prefix all carve resources with this"
    Default: ""

Resources:

  CarveIamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ResourcePrefix}carve-lambda-${OrganizationsId}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
              - "lambda.amazonaws.com"
          Action:
            - "sts:AssumeRole"
        - Effect: Allow
          Action:
            - sts:AssumeRole
          Principal:
            AWS: '*'
          Condition:
            ForAnyValue:StringEquals:
              aws:PrincipalOrgID: !Sub '${OrganizationsId}'
      Policies:
        - PolicyName: CarvePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:Invoke*
                  - lambda:ListTags
                  - lambda:GetFunction
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ResourcePrefix}carve-*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                  - iam:GetRole
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - organizations:ListAccounts
                Resource: "*"
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Sub "arn:aws:iam::*:role/${ResourcePrefix}carve-lambda-${OrganizationsId}"
              - Effect: Allow
                Action:
                  - states:StartExecution
                  - states:Describe*
                  - states:Get*
                  - states:List*
                Resource:
                  - !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${ResourcePrefix}carve-*-statemachine"
              # - Effect: "Allow"
              #   Action:
              #     - "sns:Subscribe"
              #     - "sns:Receive"
              #     - "sns:Publish"
              #   Resource: 
              #     - "*"
              - Effect: Allow
                Action:
                  - cloudformation:*
                Resource: 
                  - !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/${ResourcePrefix}carve-endpoint-vpc-*"
              - Effect: Allow
                Action:
                  - "*"
                Resource:
                  - "*"
                # Condition:
                #   ForAnyValue:StringEquals:
                #     aws:CalledVia:
                #       - cloudformation.amazonaws.com               
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeVpcs
                  - ec2:DescribeVpcPeeringConnections
                  - ec2:DescribeRegions
                  - ec2:DescribeSubnets
                  - ec2:AttachNetworkInterface
                  - ec2:DetachNetworkInterface
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Sub "arn:aws:s3:::${ResourcePrefix}carve-managed-bucket-${OrganizationsId}-${AWS::Region}"
                  - !Sub "arn:aws:s3:::${ResourcePrefix}carve-managed-bucket-${OrganizationsId}-${AWS::Region}/*"

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "${ResourcePrefix}carve-account-events"
      TopicName: !Sub "${ResourcePrefix}carve-account-events"

  TopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SNSTopic
      PolicyDocument:
        Id: Carve SNS Policy
        Version: "2012-10-17"
        Statement:
          - Sid: Allow events
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sns:Publish'
            Resource: '*'
          - Sid: Allow Carve Lambdas
            Effect: "Allow"
            Principal:
              AWS: "*"
            Action:
              - "sns:Subscribe"
              - "sns:Receive"
              - "sns:Publish"
            Resource: !Ref SNSTopic
            Condition:
              StringEquals:
                aws:PrincipalOrgID: !Ref OrganizationsId
          - Sid: Allow Carve Core Management
            Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:sts::${CarveCoreAccount}:assumed-role/${ResourcePrefix}carve-lambda-${OrganizationsId}/carve-changeset-us-east-1"
              # AWS: !Sub "arn:aws:iam::${CarveCoreAccount}:root"
              # AWS: !Sub "arn:aws:iam::${CarveCoreAccount}:role/${ResourcePrefix}carve-lambda-${OrganizationsId}"
            Action:
              - "sns:Subscribe"
              - "sns:Receive"
              - "sns:Publish"
            Resource: !Ref SNSTopic








{
  "Comment": "Create Carve endpoint stacks",
  "StartAt": "DeployS3BucketStacks",
  "States": {
    "DeployS3BucketStacks": {
      "Comment": "Create S3 Buckets in each region for deployments",
      "Type": "Task",
      "Next": "EndpointDeployPrep",
      "ResultSelector": {
        "Payload.$": "States.StringToJson($.Input)"
      },
      "Resource": "arn:aws:states:::states:startExecution.sync",
      "Parameters": {
        "StateMachineArn": "${CarveDeployStacksStepFunction}",
        "Input": {
          "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
          "Input.$": "$",
        }
      }
    },
    "EndpointDeployPrep": {
      "Type": "Task",
      "Resource":"arn:aws:states:::lambda:invoke",
      "ResultSelector": {
        "Payload.$": "States.StringToJson($.Payload)"
      },
      "Parameters": {
        "FunctionName": "${CarveFunction}",
        "Payload": {
          "DeployAction": "EndpointDeployPrep",
          "Input.$": "$"
        }
      },
      "Next": "DeployCarveEndpoints",
      "TimeoutSeconds": 900
    },
    "DeployCarveEndpoints": {
      "Comment": "Create one Carve stack per VPC",
      "Type": "Task",
      "Next": "CleanupCarveEndpoints",
      "Resource": "arn:aws:states:::states:startExecution.sync",
      "Parameters": {
        "StateMachineArn": "${CarveDeployStacksStepFunction}",
        "Input": {
          "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
          "Input.$": "$.Payload"
        }
      }
    },
    "CleanupCarveEndpoints": {
      "Comment": "Create one Carve stack per VPC",
      "Type": "Task",
      "End": true,
      "Resource": "arn:aws:states:::states:startExecution.sync",
      "Parameters": {
        "StateMachineArn": "${CarveCleanupStepFunction}",
        "Input": {
          "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
        }
      }
    }

  }
}

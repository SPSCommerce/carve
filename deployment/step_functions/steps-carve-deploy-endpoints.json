{
  "Comment": "Create Carve endpoint stacks",
  "StartAt": "CreateS3DeployBuckets",
  "States": {
    "CreateS3DeployBuckets": {
      "Type": "Map",
      "Next": "DeployPrep",
      "MaxConcurrency": 0,
      "Iterator": {
        "StartAt": "DeployS3Buckets",
        "States": {
          "DeployS3Buckets": {
            "Comment": "Create S3 Buckets in each region for deployments",
            "Type": "Task",
            "End": true,
            "Resource": "arn:aws:states:::states:startExecution.sync",
            "Parameters": {
              "StateMachineArn": "${CarveDeployStacksStepFunction}",
              "Input": {
                "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
              }
            }
          }
        }
      }
    },
    "DeployPrep": {
      "Type": "Task",
      "Resource":"arn:aws:states:::lambda:invoke",
      "ResultSelector": {
        "Payload.$": "States.StringToJson($.Payload)"
      },
      "Parameters": {
        "FunctionName": "${CarveFunction}",
        "Payload": {
          "DeployAction": "DeployPrep"
        }
      },
      "Next": "DeployCarveEndpoints",
      "TimeoutSeconds": 900
    },
    "DeployCarveEndpoints": {
      "Type": "Map",
      "End": true,
      "MaxConcurrency": 0,
      "Iterator": {
        "StartAt": "DeployCarveStacks",
        "States": {
          "DeployCarveStacks": {
            "Comment": "Create one Carve stack per VPC",
            "Type": "Task",
            "End": true,
            "Resource": "arn:aws:states:::states:startExecution.sync",
            "Parameters": {
              "StateMachineArn": "${CarveDeployStacksStepFunction}",
              "Input": {
                "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
              }
            }
          }
        }
      }
    }
  }
}

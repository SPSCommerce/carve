AWSTemplateFormatVersion: "2010-09-09"
Description: Regional S3 Deploy Bucket for Carve

Parameters:
  OrgId:
    Type: String
    Description: AWS Organizations Id
    Default: ""
  UniqueId:
    Type: String
    Description: A unique string for S3 buckets. If none, will use AWS Organizations Id
    Default: ""
  Prefix:
    Type: String
    Description: "Prefix carve AWS resources and stacknames with this"
    Default: ""

Conditions:
  UseOrgId: !Equals [ !Ref "UniqueId", "" ]

Resources:
  CarveS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If
        - UseOrgId
        - !Sub "${Prefix}carve-managed-bucket-${OrgId}-${AWS::Region}"
        - !Sub "${Prefix}carve-managed-bucket-${UniqueId}-${AWS::Region}"
      AccessControl: Private
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'

  CarveS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CarveS3Bucket
      PolicyDocument:
        Statement:
          - Sid: CarveCoreLambda
            Effect: Allow 
            Action:
              - "s3:*"
            Resource: !GetAtt CarveS3Bucket.Arn
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/${Prefix}carve-core"
          - Sid: DeploymentAccess
            Effect: Allow 
            Action:
              - "s3:Get*"
              - "s3:PutObject"
            Resource: 
              - !Sub "arn:aws:s3:::${CarveS3Bucket}"
              - !Sub "arn:aws:s3:::${CarveS3Bucket}/*"
            Principal:
              AWS: "*"
            Condition:
              StringEquals:
                aws:PrincipalOrgID: !Ref OrgId


